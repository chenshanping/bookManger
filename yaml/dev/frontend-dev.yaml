apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: gotest
  name: book-manage-nginx-dev
  labels:
    app: book-manage-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: book-manage-nginx
  template:
    metadata:
      name: book-manage-nginx
      labels:
        app: book-manage-nginx
    spec:
      nodeName: k8s-node2
      volumes:
        - name: config-volume
          configMap:
            name: nginx-config
      imagePullSecrets:
        - name: docker-secret
      containers:
        - name: book-manage-nginx-dev
          image: registry.cn-shenzhen.aliyuncs.com/csptest/bookmanger-nginx:${version}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /etc/nginx/conf.d
              name: config-volume
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  namespace: gotest
  name: book-manage-nginx-dev
spec:
  selector:
    app: book-manage-nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: book-manage-nginx-dev
  namespace: gotest
spec:
  ingressClassName: nginx
  rules:
    - host: booknginx.csp.cn
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: book-manage-nginx-dev
                port:
                  number: 80